package itheima.www.interface_polymorphic;

public class Test {
    public static void main(String[] args) {
        /*
        接口代表规则，是行为的抽象。想要让哪个类拥有一个行为，就让这个类实现对应的接口就可以了
        当一个方法的参数是接口时，可以传递接口所有实现类对象，这种方式称之为接口多态
         */
        /*
        适配器设计模式
        当一个接口中抽象方法过多 ，但是我只要使用其中一部分的时候，就可以适配器设计模式
        书写步骤：
        编写中间类，接口名+Adapter，实现对应的接口
        对接口中的抽象方法进行空实现
        让真正的实现类 继承中间类，并重写需要用的方法
        为了避免其他类创建适配器的对象，中间的适配器类用abstract进行修饰
        如果实现类还有其他类想要继承，可以让适配器去继承就好了
         */
    }
}
